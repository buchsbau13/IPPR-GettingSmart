apiVersion: v1
kind: Service
metadata:
  name: yarn
  labels:
    app: yarn
spec:
  ports:
  - port: 8088
    name: yarn-rm
  - port: 19888
    name: yarn-hs
  clusterIP: None
  selector:
     app: yarn
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hadoop-yarn
spec:
  selector:
    matchLabels:
      app: yarn # has to match .spec.template.metadata.labels
  serviceName: "yarn"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: yarn # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: yarn
        image: bxjulia/hadoop-yarn:3.1.1-spark-2.3.2
        ports:
        - containerPort: 8088
          name: yarn-rm
        - containerPort: 19888
          name: yarn-hs
        - containerPort: 4040
          name: spark-ui
        volumeMounts:
        - name: nfs-yarn-pv-1
          mountPath: /hdfs/volume1/yarn
        - name: yarn-config
          mountPath: /opt/hadoop/etc/hadoop/core-site.xml
          subPath: core-site.xml
        - name: yarn-config
          mountPath: /opt/hadoop/etc/hadoop/hdfs-site.xml
          subPath: hdfs-site.xml
        - name: yarn-config
          mountPath: /opt/hadoop/etc/hadoop/mapred-site.xml
          subPath: mapred-site.xml
        - name: yarn-config
          mountPath: /opt/hadoop/etc/hadoop/yarn-site.xml
          subPath: yarn-site.xml
        - name: spark-config
          mountPath: /opt/hadoop/spark/conf/spark-defaults.conf
          subPath: spark-defaults.conf
      volumes:
      - name: yarn-config
        configMap:
          name: yarn-config
      - name: spark-config
        configMap:
          name: spark-config
  volumeClaimTemplates:
  - metadata:
      name: nfs-yarn-pv-1
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: "nfs-yarn"
      resources:
        requests:
          storage: 10Gi