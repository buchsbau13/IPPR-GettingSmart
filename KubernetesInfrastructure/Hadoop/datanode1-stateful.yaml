apiVersion: v1
kind: Service
metadata:
  name: datanode1
  labels:
    app: datanode1
spec:
  ports:
  - port: 9864
    name: hdfs-datanode1
  clusterIP: None
  selector:
     app: datanode1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hadoop-datanode1
spec:
  selector:
    matchLabels:
      app: datanode1 # has to match .spec.template.metadata.labels
  serviceName: "datanode1"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: datanode1 # has to match .spec.selector.matchLabels
    spec:
      containers:
      - name: datanode1
        image: bxjulia/hadoop-datanode:3.1.1
        env:
        - name: HADOOP_HOST_NAMENODE
          value: namenode
        - name: HADOOP_HOST_YARN
          value: yarn
        ports:
        - containerPort: 9864
        volumeMounts:
        - name: datanode-pv-1
          mountPath: /hdfs/volume1/data
        - name: datanode-config
          mountPath: /opt/hadoop/etc/hadoop/core-site.xml
          subPath: core-site.xml
        - name: datanode-config
          mountPath: /opt/hadoop/etc/hadoop/hdfs-site.xml
          subPath: hdfs-site.xml
        - name: datanode-config
          mountPath: /opt/hadoop/etc/hadoop/mapred-site.xml
          subPath: mapred-site.xml
        - name: datanode-config
          mountPath: /opt/hadoop/etc/hadoop/yarn-site.xml
          subPath: yarn-site.xml
      volumes:
      - name: datanode-config
        configMap:
          name: datanode-config
  volumeClaimTemplates:
  - metadata:
      name: datanode-pv-1
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "datanode1"
      resources:
        requests:
          storage: 50Gi
