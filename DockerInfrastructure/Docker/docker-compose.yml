version: '2.1'
services:
    mysql:
        restart: on-failure
        image: mysql/mysql-server:5.7.21
        hostname: mysql
        container_name: mysql
        environment:
            - MYSQL_ROOT_PASSWORD=idm
            - MYSQL_ROOT_HOST=%
        volumes:
            - mysql_vol:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - default

    mongodb:
        restart: on-failure
        image: mongo:3.4
        hostname: mongodb
        container_name: mongodb
        ports:
            - "27017:27017"
        command: --smallfiles
        networks:
            - secure

    #postgres:
    #    restart: on-failure
    #    image: postgres:latest
    #    hostname: postgres
    #    container_name: postgres
    #    volumes:
    #        - postgres_vol:/var/lib/postgresql
    #    ports:
    #        - "5432:5432"
    #    networks:
    #        - default

    authzforce:
        restart: on-failure
        image: januschm/authzforce
        hostname: authzforce
        container_name: authzforce
        volumes:
            - authzforce_vol:/opt/authzforce-ce-server/data
        ports:
            - "8080:8080"
        networks:
            - default

    keyrock:
        restart: on-failure
        image: fhjima/fiware-idm
        hostname: keyrock
        container_name: keyrock
        volumes:
            - ./keyrock_config/config.js:/opt/fiware-idm/config.js:ro
            - ./keyrock_config/policy.ejs:/opt/fiware-idm/lib/authzforce_templates/policy.ejs:ro
            - ./nginx_config/certs/:/opt/fiware-idm/certs/:ro
        environment:
            - DATABASE_HOST=mysql
        ports:
            - "5000:5000"
            - "9229:9229"
        networks:
            - default
        healthcheck:
            test: ["CMD-SHELL", "nc -z -v -w 30 mysql 3306"]
            interval: 10s
            timeout: 3s
            retries: 6

    orion:
        restart: on-failure
        image: fiware/orion:2.0.0
        hostname: orion
        container_name: orion
        command: -dbhost mongodb
        networks:
            - secure

    cygnus:
        restart: on-failure
        image: januschm/cygnus-ngsi
        hostname: cygnus
        container_name: cygnus
        links:
            - mongodb:iot-mongo
        volumes:
            - ./cygnus_config/agent.conf:/opt/apache-flume/conf/agent.conf:ro
        networks:
            - secure

    comet:
        restart: on-failure
        image: fiware/sth-comet:2.4.0
        hostname: comet
        container_name: comet
        volumes:
            - ./comet_config/config.js:/opt/sth/config.js:ro
        networks:
            - secure

    idas:
        restart: on-failure
        image: fiware/iotagent-ul:1.7.0
        hostname: idas
        container_name: idas
        links:
            - mongodb:mongo
        networks:
            - secure

    #wirecloud:
    #    restart: on-failure
    #    image: fhjima/docker-wirecloud:1.2.0
    #    hostname: wirecloud
    #    container_name: wirecloud
    #    environment:
    #        - IDM_HOST=${IDM_HOST}
    #    volumes:
    #        - ./wirecloud_config/graziotthemev2/:/opt/wirecloud_instance/graziotthemev2/:ro
    #        - ./wirecloud_config/settings.py:/opt/wirecloud_instance/wirecloud_instance/settings.py:ro
    #        - ./wirecloud_config/urls.py:/opt/wirecloud_instance/wirecloud_instance/urls.py:ro
    #    ports:
    #        - "80:80"
    #    networks:
    #        - default

    nginx:
        restart: always
        image: nginx
        hostname: nginx
        container_name: nginx
        ports:
            - 80:80
        volumes:
            - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf:ro
            - wirecloud-static:/var/www/static:ro
        depends_on:
            - wirecloud


    postgres:
        restart: always
        image: postgres
        hostname: postgres
        container_name: postgres
        environment:
            - POSTGRES_PASSWORD=wirepass   # Change this password!
        volumes:
            - postgres-data:/var/lib/postgresql/data


    elasticsearch:
        restart: always
        image: elasticsearch:2.4
        hostname: elasticsearch
        container_name: elasticsearch
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        command: elasticsearch -Des.index.max_result_window=50000


    memcached:
        restart: always
        image: memcached:1
        hostname: memcached
        container_name: memcached
        command: memcached -m 2048m


    wirecloud:
        restart: always
        image: fiware/wirecloud
        hostname: wirecloud
        container_name: wirecloud
        depends_on:
            - postgres
            - elasticsearch
            - memcached
        ports:
            - 8000:8000
        environment:
            - DEBUG=False
            # - DEFAULT_THEME=wirecloud.defaulttheme
            - DB_HOST=postgres
            - DB_PASSWORD=wirepass   # Change this password!
            - FORWARDED_ALLOW_IPS=*
            - ELASTICSEARCH2_URL=http://elasticsearch:9200/
            - MEMCACHED_LOCATION=memcached:11211
            # Uncomment the following environment variables to enable IDM integration
            - FIWARE_IDM_SERVER=http://${IDM_HOST}:5000
            - DEFAULT_THEME=graziotthemev2
            - SOCIAL_AUTH_FIWARE_KEY=23c1fab4-2f69-470d-8778-4614522d29d3
            - SOCIAL_AUTH_FIWARE_SECRET=0b9194f0-f74a-4717-9222-170e9e473bf4
        volumes:
            - wirecloud-data:/opt/wirecloud_instance/data
            - wirecloud-static:/var/www/static
            - ./wirecloud_config/graziotthemev2/:/opt/wirecloud_instance/graziotthemev2/
            - ./wirecloud_config/settings.py:/opt/wirecloud_instance/wirecloud_instance/settings.py
            - ./wirecloud_config/urls.py:/opt/wirecloud_instance/wirecloud_instance/urls.py

    ngsi-proxy:
        restart: on-failure
        image: fiware/ngsiproxy:latest
        hostname: ngsi-proxy
        container_name: ngsi-proxy
        environment:
            - TRUST_PROXY_HEADERS=1
        ports:
            - "3000:3000"
        networks:
            - default

    pep-orion:
        restart: on-failure
        image: fiware/pep-proxy:7.4.0
        hostname: pep-orion
        container_name: pep-orion
        environment:
            - IDM_HOST=${IDM_HOST}
        volumes:
            - ./pep-orion_config/config.js:/opt/fiware-pep-proxy/config.js:ro
        ports:
            - "1026:1026"
            - "9230:9229"
        networks:
            - secure
            - default
        depends_on:
            keyrock:
                condition: service_healthy

    pep-idas-admin:
        restart: on-failure
        image: fiware/pep-proxy:7.4.0
        hostname: pep-idas-admin
        container_name: pep-idas-admin
        environment:
            - IDM_HOST=${IDM_HOST}
        volumes:
            - ./pep-idas-admin_config/config.js:/opt/fiware-pep-proxy/config.js:ro
        ports:
            - "4041:4041"
        networks:
            - secure
            - default
        depends_on:
            keyrock:
                condition: service_healthy

    pep-idas-sensor:
        restart: on-failure
        image: fiware/pep-proxy:7.4.0
        hostname: pep-idas-sensor
        container_name: pep-idas-sensor
        environment:
            - IDM_HOST=${IDM_HOST}
        volumes:
            - ./pep-idas-sensor_config/config.js:/opt/fiware-pep-proxy/config.js:ro
        ports:
            - "7896:7896"
        networks:
            - secure
            - default
        depends_on:
            keyrock:
                condition: service_healthy

    pep-comet:
        restart: on-failure
        image: fiware/pep-proxy:7.4.0
        hostname: pep-comet
        container_name: pep-comet
        environment:
            - IDM_HOST=${IDM_HOST}
        volumes:
            - ./pep-comet_config/config.js:/opt/fiware-pep-proxy/config.js:ro
        ports:
            - "8666:8666"
        networks:
            - secure
            - default
        depends_on:
            keyrock:
                condition: service_healthy

volumes:
    postgres_vol: ~
    mysql_vol: ~
    authzforce_vol: ~
    wirecloud-data:
    wirecloud-static:
    postgres-data:
    elasticsearch-data:


networks:
    secure:
    default:
